<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/productadppage.css">
  <link rel="shortcut icon" type="image" href="/image/logo.png">
  <title>admin page</title>
  <!-- bootstrap link -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://getbootstrap.com/docs/5.3/assets/css/docs.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <!--  -->
  <!-- Import bootstrap cdn -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
  <!-- Import jquery cdn -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous">
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx" crossorigin="anonymous">
  </script>
  <!--  -->

</head>

<body>
  <div class="container_main ">
    <!-- left bar  -->
    <div class="sidebar">
      <!-- Your sidebar content goes here -->

      <div class="profile_bar">
        <form class="circle" action="/logout" method="get">
          <img src="/image2/admin.png" alt="Profile Image">
          <p class="admintag">admin </p>
          <button id="logoutbtn" type="submit"><img width="20px" src="/image2/logout.png" alt="logout"></button>
        </form>
      </div>
      <a href="/admin/adminDashboard"><button id="toggleButton button" class="button action_usermanagement" style=" background-color: rgb(98, 77, 77);">Dashboard</button></a>
      <a href="/admin/usermanagement"><button id="toggleButton" class="button action_usermanagement" style=" background-color: rgb(98, 77, 77);">Users</button></a>
      <a href="/admin/productmangement"><button class="button" style=" background-color: rgb(98, 77, 77);">Products</button></a>
      <a href="/admin/categorymanagement"><button class="button" style=" background-color: rgb(69, 45, 45);">Categorys</button></a>
      <a href="/admin/ordermanagement"><button class="button" style=" background-color: rgb(98, 77, 77);">Orders</button></a>
      <a href="/admin/offermanagement/product"><button class="button" style=" background-color: rgb(98, 77, 77);">Offers</button></a>
      <a href="/admin/couponmanagement"><button class="button" style=" background-color: rgb(98, 77, 77);">Coupons</button></a>
    </div>
    <!--  -->
    <form class="search-bar" action="/admin/usermanagement/search" method="get">
      <h1>category Management</h1>

      <input type="text" name="key" id="search-input" placeholder="Search...">
      <button type="submit" id="search-button">
        <img src="/image2/search.png" width="30px" alt="Search Icon">
      </button>
    </form>


    <!-- Your scrollable content goes here -->

    <div class="scrollable-content">



      <div class="labelbar row">
        <p class="lebel col-6">category</p>
        <p class="lebel col-2">category Id</p>
        <p class="lebel col-2">Quantity</p>
        <p class="lebel col-2"></p>
      </div>
      <div class="underline"></div> <!-- Add this line for the underline -->


      <button id="createnew" type="button" data-bs-toggle="modal" data-bs-target="#createcategory">new</button>



      <div class="box">
        <%let count=1%>

        <% categorylist.forEach(category=> { %>


        <div class="inner-box pid_hide " id="<%=category._id%>">
          <div class="brownline"></div>
          <div class="item">
            <p style="margin-top: 50%;">
              <%=count%>
            </p>
          </div>

          <div class="item imgtext ">
            <!-- he we img div is is in text -->
            <div class="imgdiv_product">
              <img src="/<%=category.category_image_url%>" alt="!">

            </div>

            <div class="discription">

              <p><strong>
                  <%=category.category_name%>
                </strong><br><span style="font-size: 13px;">
                  <%=category.category_description%>
                </span></p>
            </div>


          </div>

          <div class="item">
            <p style="font-size: 13px ; " class="">
              <%=category._id%>
            </p>

          </div>
          <div class="item">
          </div>

          <div class="item">
            <!-- delete tuggle btn -->
            <button data-id="<%= category._id %>" data-category="<%=category.category_name%>" id="clsbtn" type="button" class="btn_icon " data-bs-toggle="modal" data-bs-target="#deleteModal" data-bs-whatever="@mdo ">
              <img src="/image2/delete.png" width="23px" alt="">
            </button>


            <button class='edit_btn' data-id="<%= category._id %>" data-category="<%=category.category_name%>" data-category_description="<%=category.category_description%>" data-category_qty="<%=category.category_qty%>" id="editModal_btn" type="button" data-bs-toggle="modal" data-bs-target="#editModal" data-bs-whatever="@mdo ">EDIT</button>
            <!--  -->



          </div>



        </div>
        <% count++ %>
        <%})%>
      </div>

    </div>


  </div>

  <!-- delete model -->
  <div class="modal fade modelstyle" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog  ">
      <div class="modal-content inner">
        <div class="modal-header modeltext">
          <h1 class="modal-title fs-5" id="deleteModalLabel">Delete_ <span id="categoryname_model"></span>_From Data
            Base
          </h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div id="CNFcls" style="display: none;"></div>
        <div class="modal-body modeltext">
          Do you really want to delete this user ?<br>
          <span style="color: red;">Warning</span>: This data is deleted permanently from the database.
        </div>
        <div class="modal-footer modeltext">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-danger delete-button" id="deleteBtn_model" data-bs-dismiss="modal" value="">DELETE</button>
        </div>
      </div>
    </div>
  </div>
  <script>
    document.getElementById("deleteBtn_model").addEventListener("click", (event) => {


      let id = document.getElementById("CNFcls").innerHTML


      const url = '/admin/deletecategory/' + id;
      // The DELETE request
      fetch(url, {
          method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
          window.location.href = '/admin/categorymanagement'
        })
        .catch((error) => console.error('Error:', error));

    })



    let deleteModel = document.getElementById('deleteModal');
    deleteModel.addEventListener('show.bs.modal', function(event) {
      // Button that triggered the modal
      let button = event.relatedTarget;
      let categoryid = button.getAttribute('data-id');
      let categoryName = button.getAttribute('data-category');
      let Uid = deleteModal.querySelector('#CNFcls');
      Uid.innerHTML = categoryid;
      // Set the category._id value to the name_category element
      let namecategoryElement = document.getElementById('categoryname_model');
      namecategoryElement.textContent = categoryName;
    });
  </script>
  <!--  -->

  <!-- catagory edit model  -->
  <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modelstyle ">
      <div class="modal-content inner">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalLabel">Edit Category</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form action="/admin/categorymangement" method="post" id="">
          <div class="modal-body">
            <div class="container-fluid">
              <!--  -->
              <div class="form-floating mb-3">
                <input type="text" class="form-control" id="categoryname_update" placeholder="name" name="categoryname">
                <label for="newUsername">categoryname</label>
              </div>
              <!--  -->
              <div class="form-floating mb-3">
                <input type="text" class="form-control" id="description_update" placeholder="name" name="description">
                <label for="newUsername">Description</label>
              </div>
              <!--  -->

              <!--  -->
              <input type="text" class="form-control" hidden id="categoryid_update" name="categoryid">

            </div>
          </div>

          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary" id="submit_edit">Save changes</button>
          </div>

        </form>
      </div>
    </div>
  </div>
  <!-- end of edit model  -->

  <!-- edit model script -->
  <script>
    const submit_edit = document.getElementById("submit_edit")

    submit_edit.addEventListener("click", (event) => {
      event.preventDefault();
      var categoryid = document.getElementById("categoryid_update")
      var description = document.getElementById("description_update")
      var categoryname = document.getElementById("categoryname_update")



      // Create a new FormData object
      var data = {
        description: description.value,
        categoryname: categoryname.value,
        categoryid: categoryid.value,
      }



      console.log(data);

      fetch(`/admin/categorymanagement/edit`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data),
        })
        .then(response => response.json())
        .then(data => {
          console.log(data);
          window.location.href = "/admin/categorymanagement"

        })
        .catch(error => alert("error"));
    })

    let editmodel = document.getElementById('editModal');
    editmodel.addEventListener('show.bs.modal', function(event) {
      // Button that triggered the modal
      let button = event.relatedTarget;
      let categoryid = button.getAttribute('data-id');
      let categoryName = button.getAttribute('data-category');
      let category_qty = button.getAttribute('data-category_qty');
      let category_description = button.getAttribute('data-category_description');

      let Uid = editmodel.querySelector('#categoryid_update');
      Uid.value = categoryid;
      let categoryname_update = editmodel.querySelector('#categoryname_update');
      categoryname_update.value = categoryName;
      let description_update = editmodel.querySelector('#description_update');
      description_update.value = category_description;
      let quantity_update = editmodel.querySelector('#quantity_update');
      quantity_update.value = category_qty;

    })
  </script>
  <!-- script end -->

  <!-- category create modal -->
  <div class="modal fade" id="createcategory" onsubmit="addData()" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modelstyle ">
      <div class="modal-content inner">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalLabel">Add New category</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form action="/admin/categorymanagement" method="post" id="signupForm" class="create_form_data" enctype="multipart/form-data">
          <div class="modal-body">
            <div class="container-fluid">
              <!--  -->
              <div class="form-floating mb-3">
                <input type="text" class="form-control" id="categoryname" placeholder="name" name="categoryname">
                <label for="newUsername">categoryname</label>
              </div>
              <!--  -->
              <div class="form-floating mb-3">
                <input type="file" class="form-control" id="categoryimg" name="image" accept="image/png, image/jpeg">

              </div>
              <!--  -->
              <div class="form-floating mb-3">
                <input type="text" class="form-control" id="description" placeholder="name" name="description">
                <label for="newUsername">Description</label>
              </div>

            </div>
          </div>
          <div style="color: rgb(255, 142, 142); text-shadow:2px 2px 3px black; font-size:15px; margin:0 0 0 1rem;" class="validation_error"></div>

          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary" id="submit">Save changes</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  <!-- modal end  -->


  <script>
    function addData() {
      event.preventDefault()
      let form = document.querySelector(".create_form_data")
      const categoryname = document.querySelector("#categoryname").value.trim();
      const description = document.querySelector("#description").value.trim();
      const categoryImg = document.querySelector("#categoryimg");

      // Validate categoryname
      if ((categoryname.length < 5 || categoryname.length > 12)) {
        document.querySelector(".validation_error").style.display = "block";
        document.querySelector(".validation_error").textContent = "Category name must be 5-12 characters.";
        return false;
      }
      if (categoryname) {
        const data = {
          categoryname,
        };
        fetch('/admin/categorynameAvailability', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
          })
          .then(response => {
            if (!response.ok) {
              throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
          })
          .then(data => {
            if (data.status === true) {
              document.querySelector(".validation_error").style.display = "block";
              document.querySelector(".validation_error").textContent = "The name already taken.";
              throw new Error('Coupon name already taken.');
            } else {
              // Continue with other validations and second fetch
              continueWithSecondFetch();
            }
          })
          .catch(e => {
            console.log('There has been a problem with your fetch operation: ' + e.message);
          });
      }

      function continueWithSecondFetch() {
        // Validate image file
        if (categoryImg.files[0] === undefined) {
          document.querySelector(".validation_error").style.display = "block";
          document.querySelector(".validation_error").textContent = "image mandatory. ";
          return false;
        }
        if (!['image/png', 'image/jpeg'].includes(categoryImg.files[0].type)) {
          document.querySelector(".validation_error").style.display = "block";
          document.querySelector(".validation_error").textContent = "Invalid image file type. ";
          return false;
        }
        if (categoryImg.files[0].size > 1000000) { // 1MB limit
          document.querySelector(".validation_error").style.display = "block";
          document.querySelector(".validation_error").textContent = "Image file too large. Maximum size is 1MB.";
          return false;
        }
        // Validate description
        if (description.length <= 1) {
          document.querySelector(".validation_error").style.display = "block";
          document.querySelector(".validation_error").textContent = "Description cannot be empty.";
          return false;
        }
        if (description.length > 100) {
          document.querySelector(".validation_error").style.display = "block";
          document.querySelector(".validation_error").textContent = "Description max limit exceeded.";
          return false;
        }

        // If all validations pass, submit the form
        const data = {
          categoryname,
          description,
          image: categoryImg,
        };

        // Second fetch request
        var formData = new FormData(document.querySelector('.create_form_data'));
        // Make fetch request
        fetch('/admin/categorymanagement', {
            method: 'POST',
            body: formData
          })
          .then(response => response.json())
          .then(data => {
            window.location.reload()

          })
          .catch(error => {
            console.error('Error:', error);
          });

      }

    }
  </script>





</body>

</html>